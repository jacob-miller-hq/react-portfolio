{"version":3,"sources":["components/Navbar.js","components/Fourier.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","rootPath","id","to","className","Cycles","canvas","points","handleResize","resizeCanvas","transform","boundPoints","trace","translate","dx","dy","scale","scaleFactor","generateEpicycles","animLoop","timestamp","start","step","tracing","elapsed","x","y","circles","forEach","circle","angle","Math","PI","speed","offset","radius","cos","sin","push","ctx","clearRect","cvs","width","height","drawTraceShadow","lineCap","strokeStyle","slice","point","i","beginPath","lastX","lastY","moveTo","lineTo","len","magnitude","abs","lineWidth","max","log","stroke","drawTrace","drawCircles","arc","fillStyle","fill","lastPoint","lineJoin","window","requestAnimationFrame","this","getContext","addEventListener","minX","reduce","min","p","maxX","minY","maxY","console","boundW","boundH","wFactor","hFactor","c","s","drawPoints","fillRect","getBoundingClientRect","deg","floor","length","generateComplex","generateCircles","sort","c1","c2","speedDiff","complex","n","real","imag","numPoints","k","r","map","atan2","factor","sqrt","Fourier","useState","hasMounted","setHasMounted","useRef","useEffect","copy","data","splice","pointsFromData","current","ref","Home","App","ROOT_PATH","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"20hCAceA,EAXA,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACf,OACE,yBAAKC,GAAG,UACN,kBAAC,IAAD,CAAMC,GAAIF,EAAUG,UAAU,QAA9B,gBACA,kBAAC,IAAD,CAAMD,GAAIF,EAAUG,UAAU,QAA9B,QACA,kBAAC,IAAD,CAASD,GAAIF,EAAW,WAAYG,UAAU,QAA9C,WACA,kBAAC,IAAD,CAASD,GAAIF,EAAW,UAAWG,UAAU,QAA7C,Y,gCCaN,IAIMC,E,WACJ,WAAYC,EAAQC,GAAS,IAAD,gCAwC5BC,aAAe,WACb,EAAKC,eAEL,IAAIC,EAAY,EAAKC,cAErB,EAAKC,MAAQC,EAAU,EAAKD,MAAOF,EAAUI,GAAIJ,EAAUK,IAC3D,EAAKH,MAAQI,EAAM,EAAKJ,MAAOF,EAAUO,aAEzC,EAAKC,qBAhDqB,KAiG5BC,SAAW,SAACC,GAGL,EAAKC,QACR,EAAKA,MAAQD,EACb,EAAKE,MAAQ,EACb,EAAKC,SAAU,GAEjB,EAAKC,QAAUJ,EAAY,EAAKC,MAChC,IATwB,iBAUtB,EAAKC,OACL,IAAIG,EAAI,EACJC,EAAI,EACR,EAAKC,QAAQC,SAAQ,SAAAC,GACnBA,EAAOJ,EAAIA,EACXI,EAAOH,EAAIA,EACX,IAAII,EAAS,EAAKR,KApHF,MAoH2B,EAAES,KAAKC,IAAMH,EAAOI,MAAQJ,EAAOK,OAC9ET,GAAKI,EAAOM,OAASJ,KAAKK,IAAIN,GAC9BJ,GAAKG,EAAOM,OAASJ,KAAKM,IAAIP,MAE5B,EAAKP,SACP,EAAKX,MAAM0B,KAAK,CAACb,IAAGC,MAzHJ,OA2Hd,EAAKJ,OACP,EAAKC,SAAU,IAfb,EAAKD,KA7GS,KA6GgB,EAAKE,QA9GlB,KA8GiD,IAmBxE,EAAKe,IAAIC,UAAU,EAAG,EAAG,EAAKC,IAAIC,MAAO,EAAKD,IAAIE,QAGlD,IAAIC,EAAkB/B,EAAU,EAAKD,MAAO,EAAK6B,IAAIC,MAAM,EAAI,EAAG,EAAKD,IAAIE,OAAO,EAAI,GACtF,EAAKJ,IAAIM,QAAU,QACnB,EAAKN,IAAIO,YAAc,UACvBF,EAAgBG,MAAM,GAAGnB,SAAQ,SAACoB,EAAOC,GACvC,EAAKV,IAAIW,YACT,IAAIC,EAAQP,EAAgBK,GAAGxB,EAC3B2B,EAAQR,EAAgBK,GAAGvB,EAC/B,EAAKa,IAAIc,OAAOF,EAAOC,GACvB,EAAKb,IAAIe,OAAON,EAAMvB,EAAGuB,EAAMtB,GAC/B,IAAI6B,EAAM,GAAIC,EAAUR,EAAMvB,EAAI0B,EAAOH,EAAMtB,EAAI0B,GAAS,GAAIrB,KAAK0B,IAAIT,EAAMtB,EAAI0B,GACnF,EAAKb,IAAImB,UAAY3B,KAAK4B,IAAI,GAAI,EAAI,IAAI5B,KAAK6B,IAAIL,IAAQ,EAAKd,IAAIC,MAAQ,KAC5E,EAAKH,IAAIsB,YAGX,IAAIC,EAAYjD,EAAU,EAAKD,MAAO,EAAK6B,IAAIC,MAAM,EAAG,EAAKD,IAAIE,OAAO,GACxE,EAAKJ,IAAIM,QAAU,QACnB,EAAKN,IAAIO,YAAc,UACvBgB,EAAUf,MAAM,GAAGnB,SAAQ,SAACoB,EAAOC,GACjC,EAAKV,IAAIW,YACT,IAAIC,EAAQW,EAAUb,GAAGxB,EACrB2B,EAAQU,EAAUb,GAAGvB,EACzB,EAAKa,IAAIc,OAAOF,EAAOC,GACvB,EAAKb,IAAIe,OAAON,EAAMvB,EAAGuB,EAAMtB,GAC/B,IAAI6B,EAAM,GAAIC,EAAUR,EAAMvB,EAAI0B,EAAOH,EAAMtB,EAAI0B,GAAS,GAAIrB,KAAK0B,IAAIT,EAAMtB,EAAI0B,GACnF,EAAKb,IAAImB,UAAY3B,KAAK4B,IAAI,GAAI,EAAI,IAAI5B,KAAK6B,IAAIL,IAAQ,EAAKd,IAAIC,MAAQ,KAC5E,EAAKH,IAAIsB,YAIX,IAAIE,EAAclD,EAAU,EAAKc,QAAS,EAAKc,IAAIC,MAAM,EAAG,EAAKD,IAAIE,OAAO,GAC5EoB,EAAYnC,SAAQ,SAACC,EAAQoB,GAC3B,EAAKV,IAAIW,YACT,EAAKX,IAAIyB,IAAInC,EAAOJ,EAAGI,EAAOH,EAAGK,KAAK0B,IAAI,EAAK9B,QAAQsB,GAAGd,QAAS,EAAG,EAAEJ,KAAKC,IAC7E,EAAKO,IAAI0B,UAAY,YACrB,EAAK1B,IAAI2B,UAIX,EAAK3B,IAAIW,YACT,EAAKX,IAAIc,OAAOU,EAAY,GAAGtC,EAAGsC,EAAY,GAAGrC,GACjDqC,EAAYnC,SAAQ,SAAAC,GAClB,EAAKU,IAAIe,OAAOzB,EAAOJ,EAAGI,EAAOH,MAEnC,IAAIyC,EAAYL,EAAU,EAAKxC,KA9KX,MA+KpB,EAAKiB,IAAIe,OAAOa,EAAU1C,EAAG0C,EAAUzC,GACvC,EAAKa,IAAImB,UAAY,EACrB,EAAKnB,IAAI6B,SAAW,QACpB,EAAK7B,IAAIO,YAAc,YACvB,EAAKP,IAAIsB,SAITQ,OAAOC,sBAAsB,EAAKnD,WAnLlCoD,KAAK9B,IAAMnC,EACXiE,KAAKhE,OAASA,EACdgE,KAAK3D,MAAQ,GACb2D,KAAKhC,IAAMgC,KAAK9B,IAAI+B,WAAW,MAE/BH,OAAOI,iBAAiB,SAAUF,KAAK/D,cACvC+D,KAAK/D,eAEL6D,OAAOC,sBAAsBC,KAAKpD,U,0DAKlC,IAAIuD,EAAOH,KAAKhE,OAAOoE,QAAO,SAACC,EAAKC,GAAN,OAAY9C,KAAK6C,IAAIC,EAAEpD,EAAGmD,KAAML,KAAKhE,OAAO,GAAGkB,GACzEqD,EAAOP,KAAKhE,OAAOoE,QAAO,SAAChB,EAAKkB,GAAN,OAAY9C,KAAK4B,IAAIkB,EAAEpD,EAAGkC,KAAMY,KAAKhE,OAAO,GAAGkB,GACzEsD,EAAOR,KAAKhE,OAAOoE,QAAO,SAACC,EAAKC,GAAN,OAAY9C,KAAK6C,IAAIC,EAAEnD,EAAGkD,KAAML,KAAKhE,OAAO,GAAGmB,GACzEsD,EAAOT,KAAKhE,OAAOoE,QAAO,SAAChB,EAAKkB,GAAN,OAAY9C,KAAK4B,IAAIkB,EAAEnD,EAAGiC,KAAMY,KAAKhE,OAAO,GAAGmB,GAC7EuD,QAAQrB,IAAI,eAAgBc,EAAMK,EAAMD,EAAME,GAC9C,IAAIE,EAASJ,EAAOJ,EAChBS,EAASH,EAAOD,EAChBK,EAAUb,KAAK9B,IAAIC,MAAQwC,EAC3BG,EAAUd,KAAK9B,IAAIE,OAASwC,EAE5BrE,GAAM4D,EAAQQ,EAAS,EACvBnE,GAAMgE,EAAQI,EAAS,EACvBlE,EAAc,IAAOc,KAAK6C,IAAIQ,EAASC,GAG3C,OAFAd,KAAKhE,OAASM,EAAU0D,KAAKhE,OAAQO,EAAIC,GACzCwD,KAAKhE,OAASS,EAAMuD,KAAKhE,OAAQU,GAC1B,CAACH,KAAIC,KAAIE,iB,mCAGgB,IAAD,OAAtBqE,EAAsB,uDAAlB,UAAWC,EAAO,uDAAH,EACxBC,EAAa3E,EAAU0D,KAAKhE,OAAQgE,KAAK9B,IAAIC,MAAM,EAAG6B,KAAK9B,IAAIE,OAAO,GAC1E6C,EAAW5D,SAAQ,SAAAiD,GACjB,EAAKtC,IAAI0B,UAAYqB,EACrB,EAAK/C,IAAIkD,SAASZ,EAAEpD,EAAGoD,EAAEnD,EAAG6D,EAAGA,Q,qCAgBjCN,QAAQrB,IAAIW,KAAK9B,KACjB8B,KAAK9B,IAAIC,MAAQ6B,KAAK9B,IAAIiD,wBAAwBhD,MAClD6B,KAAK9B,IAAIE,OAAS4B,KAAK9B,IAAIC,MA3DV,I,0CAgEjB,IAAIiD,EAAM5D,KAAK6D,MAAMrB,KAAKhE,OAAOsF,OAAS,GAC1CtB,KAAKuB,gBAAgBH,GAErBpB,KAAKwB,kBACLd,QAAQrB,IAAIW,KAAK5C,SACjB4C,KAAK5C,QAAQqE,MAAK,SAACC,EAAIC,GACrB,GAAiB,IAAbD,EAAGhE,MAAa,OAAQ,EAC5B,GAAiB,IAAbiE,EAAGjE,MAAa,OAAO,EAC3B,IAAIkE,EAAYpE,KAAK0B,IAAIwC,EAAGhE,OAASF,KAAK0B,IAAIyC,EAAGjE,OACjD,OAAqB,IAAdkE,EAAkBD,EAAG/D,OAAS8D,EAAG9D,OAASgE,O,sCAIrCR,GAAM,IAAD,OACnBpB,KAAK6B,QAAU,GACf,IAFmB,eAEXC,GACN,IAAIC,EAAO,EACPC,EAAO,EACPC,EAAY,EAAKjG,OAAOsF,OAC5B,EAAKtF,OAAOqB,SAAQ,SAACiD,EAAG4B,GACtB,IAAI3E,EAAQ,EAAEC,KAAKC,GAAKwE,EAAYC,EAAIJ,EACxCC,GAAQzB,EAAEpD,EAAIM,KAAKK,IAAIN,GAAS+C,EAAEnD,EAAIK,KAAKM,IAAIP,GAC/CyE,GAAQ1B,EAAEpD,EAAIM,KAAKM,IAAIP,GAAS+C,EAAEnD,EAAIK,KAAKK,IAAIN,MAEjD,EAAKsE,QAAQ9D,KAAK,CAACoE,EAAGJ,EAAKE,EAAWvD,EAAGsD,EAAKC,KATxCH,GAAKV,EAAKU,GAAKV,EAAKU,IAAM,EAA1BA,K,wCAaS,IAAD,OAChB9B,KAAK5C,QAAU4C,KAAK6B,QAAQO,KAAI,SAACrB,EAAGrC,GAClC,MAAO,CACLd,OAAQqB,EAAU8B,EAAEoB,EAAGpB,EAAErC,GACzBhB,MAAOgB,EAAIlB,KAAK6D,MAAM,EAAKQ,QAAQP,OAAO,GAC1C3D,OAAQH,KAAK6E,MAAMtB,EAAErC,EAAGqC,EAAEoB,W,KA4FlC,SAAS7F,EAAUN,EAAQO,EAAIC,GAC7B,OAAOR,EAAOoG,KAAI,SAAA9B,GAAO,MAAO,CAACpD,EAAGoD,EAAEpD,EAAIX,EAAIY,EAAGmD,EAAEnD,EAAIX,MAGzD,SAASC,EAAMT,EAAQsG,GACrB,OAAOtG,EAAOoG,KAAI,SAAA9B,GAAO,MAAO,CAACpD,EAAGoF,EAAOhC,EAAEpD,EAAGC,EAAGmF,EAAOhC,EAAEnD,MAG9D,SAAS8B,EAAU/B,EAAGC,GACpB,OAAOK,KAAK+E,KAAKrF,EAAEA,EAAIC,EAAEA,GAaZqF,MAtOf,WAAoB,IAAD,EACmBC,oBAAS,GAD5B,mBACVC,EADU,KACEC,EADF,KAEX5G,EAAS6G,iBAAO,MAUtB,OATAC,qBAAU,WACR,IAAKH,EAAY,CACf,IAAM1G,EAuNZ,WACE,IAAI8G,EAAOC,EAAKvE,QACZxC,EAAS,GACb,KAAM8G,EAAKxB,QAAQtF,EAAO+B,KAAK+E,EAAKE,OAAO,EAAG,IAC9C,OAAOhH,EAAOoG,KAAI,SAAA9B,GAAM,IAAD,cACNA,EADM,GAErB,MAAO,CAACpD,EAFa,KAEVC,EAFU,SA3NJ8F,GACf,IAAInH,EAAOC,EAAOmH,QAASlH,GAE3B2G,GAAc,MAEf,CAACD,IAGF,yBAAK7G,UAAU,eACb,4BAAQsH,IAAKpH,MCQJqH,MAtBf,WACE,OACE,yBAAKzH,GAAG,QACN,kBAAC,EAAD,MACA,yBAAKA,GAAG,QAAQE,UAAU,kBACxB,kDACA,iMAEE,6BAAM,6BAFR,iOAIE,6BAAM,6BAJR,yJAQF,yBAAKF,GAAG,eAAeE,UAAU,kBAC/B,oDACA,uCCCOwH,MAdf,WACE,IAAMC,EAAY,mBAClB,OACE,kBAAC,IAAD,KACE,yBAAK3H,GAAG,OACN,kBAAC,EAAD,CAAQD,SAAU4H,IAClB,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAMF,EAAWG,UAAWL,IACzC,kBAAC,IAAD,CAAOI,KAAMF,EAAY,WAAYG,UAAW,OAChD,kBAAC,IAAD,CAAOD,KAAMF,EAAY,UAAWG,UAAW,UCFnCC,QACW,cAA7B5D,OAAO6D,SAASC,UAEe,UAA7B9D,OAAO6D,SAASC,UAEhB9D,OAAO6D,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLhE,QAAQgE,MAAMA,EAAMC,c","file":"static/js/main.fc8da466.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nconst Navbar = ({rootPath}) => {\r\n  return (\r\n    <nav id=\"Navbar\">\r\n      <Link to={rootPath} className=\"logo\">Jacob Miller</Link>\r\n      <Link to={rootPath} className=\"link\">Home</Link>\r\n      <NavLink to={rootPath + \"/contact\"} className=\"link\">Contact</NavLink>\r\n      <NavLink to={rootPath + \"/resume\"} className=\"link\">Resume</NavLink>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar","import React, { useState, useEffect, useRef } from 'react'\r\nimport data from './../signature.json'\r\n\r\nfunction Fourier() {\r\n  const [hasMounted, setHasMounted] = useState(false)\r\n  const canvas = useRef(null)\r\n  useEffect(() => {\r\n    if (!hasMounted) {\r\n      const points = pointsFromData()\r\n      new Cycles(canvas.current, points)\r\n\r\n      setHasMounted(true)\r\n    }\r\n  }, [hasMounted])\r\n\r\n  return (\r\n    <div className=\"Fourier col\">\r\n      <canvas ref={canvas} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst TARGET_RATIO = 2\r\nconst MILLISEC_PER_CYCLE = 10000\r\nconst STEPS_PER_CYCLE = 2880\r\n\r\nclass Cycles {\r\n  constructor(canvas, points) {\r\n    this.cvs = canvas\r\n    this.points = points\r\n    this.trace = []\r\n    this.ctx = this.cvs.getContext('2d')\r\n    \r\n    window.addEventListener('resize', this.handleResize)\r\n    this.handleResize()\r\n\r\n    window.requestAnimationFrame(this.animLoop)\r\n  }\r\n\r\n  boundPoints() {\r\n    // centers bounding rectangle at (w/2, h/2) and scales it to match shorter axis\r\n    let minX = this.points.reduce((min, p) => Math.min(p.x, min), this.points[0].x)\r\n    let maxX = this.points.reduce((max, p) => Math.max(p.x, max), this.points[0].x)\r\n    let minY = this.points.reduce((min, p) => Math.min(p.y, min), this.points[0].y)\r\n    let maxY = this.points.reduce((max, p) => Math.max(p.y, max), this.points[0].y)\r\n    console.log('boundPoints:', minX, minY, maxX, maxY)\r\n    let boundW = maxX - minX\r\n    let boundH = maxY - minY\r\n    let wFactor = this.cvs.width / boundW\r\n    let hFactor = this.cvs.height / boundH\r\n    \r\n    let dx = -minX - (boundW / 2)\r\n    let dy = -minY - (boundH / 2)\r\n    let scaleFactor = 0.95 * Math.min(wFactor, hFactor)\r\n    this.points = translate(this.points, dx, dy)\r\n    this.points = scale(this.points, scaleFactor)\r\n    return {dx, dy, scaleFactor}\r\n  }\r\n\r\n  drawPoints(c = '#ffffff', s = 1) {\r\n    let drawPoints = translate(this.points, this.cvs.width/2, this.cvs.height/2)\r\n    drawPoints.forEach(p => {\r\n      this.ctx.fillStyle = c\r\n      this.ctx.fillRect(p.x, p.y, s, s)\r\n    })\r\n  }\r\n\r\n  handleResize = () => {\r\n    this.resizeCanvas()\r\n\r\n    let transform = this.boundPoints()\r\n    // scale trace to fit as well\r\n    this.trace = translate(this.trace, transform.dx, transform.dy)\r\n    this.trace = scale(this.trace, transform.scaleFactor)\r\n\r\n    this.generateEpicycles()\r\n  }\r\n\r\n  resizeCanvas() {\r\n    console.log(this.cvs)\r\n    this.cvs.width = this.cvs.getBoundingClientRect().width\r\n    this.cvs.height = this.cvs.width / TARGET_RATIO\r\n    // console.log('resizeCanvas:', this.cvs.width, this.cvs.height)\r\n  }\r\n\r\n  generateEpicycles() {\r\n    let deg = Math.floor(this.points.length / 4)\r\n    this.generateComplex(deg)\r\n    // this.complex = [{r: 0, i: 10}, {r: -10, i: -10}, {r: 20, i: 0}]\r\n    this.generateCircles()\r\n    console.log(this.circles)\r\n    this.circles.sort((c1, c2) => {\r\n      if (c1.speed === 0) return -1\r\n      if (c2.speed === 0) return 1\r\n      let speedDiff = Math.abs(c1.speed) - Math.abs(c2.speed)\r\n      return speedDiff === 0 ? c2.radius - c1.radius : speedDiff\r\n    })\r\n  }\r\n\r\n  generateComplex(deg) {\r\n    this.complex = []\r\n    for(let n = -deg; n <= deg; n++) {\r\n      let real = 0;\r\n      let imag = 0;\r\n      let numPoints = this.points.length\r\n      this.points.forEach((p, k) => {\r\n        let angle = 2*Math.PI / numPoints * k * n\r\n        real += p.x * Math.cos(angle) - p.y * Math.sin(angle)\r\n        imag -= p.x * Math.sin(angle) + p.y * Math.cos(angle) \r\n      })\r\n      this.complex.push({r: real/numPoints, i: imag/numPoints})\r\n    }\r\n  }\r\n\r\n  generateCircles() {\r\n    this.circles = this.complex.map((c, i) => {\r\n      return {\r\n        radius: magnitude(c.r, c.i),\r\n        speed: i - Math.floor(this.complex.length/2),\r\n        offset: Math.atan2(c.i, c.r)\r\n      }\r\n    })\r\n  }\r\n\r\n  animLoop = (timestamp) => {\r\n    // TODO: move the calculation of this into a worker for them\r\n    //                  * Z M O O T H   C U R V E Z *\r\n    if (!this.start) {\r\n      this.start = timestamp\r\n      this.step = -1\r\n      this.tracing = true\r\n    }\r\n    this.elapsed = timestamp - this.start\r\n    while(this.step / STEPS_PER_CYCLE < this.elapsed / MILLISEC_PER_CYCLE) {\r\n      this.step++\r\n      let x = 0\r\n      let y = 0\r\n      this.circles.forEach(circle => {\r\n        circle.x = x\r\n        circle.y = y\r\n        let angle = (this.step/STEPS_PER_CYCLE) * (2*Math.PI) * circle.speed + circle.offset\r\n        x += circle.radius * Math.cos(angle)\r\n        y -= circle.radius * Math.sin(angle)\r\n      })\r\n      if (this.tracing) {\r\n        this.trace.push({x, y})\r\n      }\r\n      if (this.step === STEPS_PER_CYCLE) {\r\n        this.tracing = false\r\n      }\r\n    }\r\n\r\n    this.ctx.clearRect(0, 0, this.cvs.width, this.cvs.height)\r\n\r\n    // draw trace shadow\r\n    let drawTraceShadow = translate(this.trace, this.cvs.width/2 + 2, this.cvs.height/2 + 4)\r\n    this.ctx.lineCap = 'round'\r\n    this.ctx.strokeStyle = \"#06276f\"\r\n    drawTraceShadow.slice(1).forEach((point, i) => {\r\n      this.ctx.beginPath()\r\n      let lastX = drawTraceShadow[i].x\r\n      let lastY = drawTraceShadow[i].y\r\n      this.ctx.moveTo(lastX, lastY)\r\n      this.ctx.lineTo(point.x, point.y)\r\n      let len = 0.2*magnitude(point.x - lastX, point.y - lastY) + 0.8*Math.abs(point.y - lastY)\r\n      this.ctx.lineWidth = Math.max(0, (6 - 1.2*Math.log(len)) * this.cvs.width / 1000)\r\n      this.ctx.stroke()\r\n    })\r\n    // draw trace\r\n    let drawTrace = translate(this.trace, this.cvs.width/2, this.cvs.height/2)\r\n    this.ctx.lineCap = 'round'\r\n    this.ctx.strokeStyle = \"#3455aa\"\r\n    drawTrace.slice(1).forEach((point, i) => {\r\n      this.ctx.beginPath()\r\n      let lastX = drawTrace[i].x\r\n      let lastY = drawTrace[i].y\r\n      this.ctx.moveTo(lastX, lastY)\r\n      this.ctx.lineTo(point.x, point.y)\r\n      let len = 0.2*magnitude(point.x - lastX, point.y - lastY) + 0.8*Math.abs(point.y - lastY)\r\n      this.ctx.lineWidth = Math.max(0, (6 - 1.2*Math.log(len)) * this.cvs.width / 1000)\r\n      this.ctx.stroke()\r\n    })\r\n\r\n    // draw circles\r\n    let drawCircles = translate(this.circles, this.cvs.width/2, this.cvs.height/2)\r\n    drawCircles.forEach((circle, i) => {\r\n      this.ctx.beginPath()\r\n      this.ctx.arc(circle.x, circle.y, Math.abs(this.circles[i].radius), 0, 2*Math.PI)\r\n      this.ctx.fillStyle = '#ffffff07'\r\n      this.ctx.fill()\r\n    })\r\n\r\n    // draw arms\r\n    this.ctx.beginPath()\r\n    this.ctx.moveTo(drawCircles[0].x, drawCircles[0].y)\r\n    drawCircles.forEach(circle => {\r\n      this.ctx.lineTo(circle.x, circle.y)\r\n    })\r\n    let lastPoint = drawTrace[this.step % STEPS_PER_CYCLE]\r\n    this.ctx.lineTo(lastPoint.x, lastPoint.y)\r\n    this.ctx.lineWidth = 2;\r\n    this.ctx.lineJoin = 'round';\r\n    this.ctx.strokeStyle = \"#dfdfdfaa\";\r\n    this.ctx.stroke();\r\n\r\n    // this.drawPoints()\r\n\r\n    window.requestAnimationFrame(this.animLoop)\r\n  }\r\n}\r\n\r\nfunction translate(points, dx, dy) {\r\n  return points.map(p => { return {x: p.x + dx, y: p.y + dy} })\r\n}\r\n\r\nfunction scale(points, factor) {\r\n  return points.map(p => { return {x: factor*p.x, y: factor*p.y}})\r\n}\r\n\r\nfunction magnitude(x, y) {\r\n  return Math.sqrt(x*x + y*y)\r\n}\r\n\r\nfunction pointsFromData() {\r\n  let copy = data.slice()\r\n  let points = []\r\n  while(copy.length) points.push(copy.splice(0, 2))\r\n  return points.map(p => {\r\n    const [x, y] = p\r\n    return {x, y}\r\n  })\r\n}\r\n\r\nexport default Fourier","import React from 'react'\r\nimport Fourier from './Fourier'\r\n\r\nfunction Home() {\r\n  return (\r\n    <div id=\"Home\">\r\n      <Fourier />\r\n      <div id=\"intro\" className=\"col foreground\">\r\n        <h1>Hi, My Name's Jake</h1>\r\n        <p>\r\n          I started programming as a child, designing robots for the state fair, but my interests have shifted and now lie in user-focused data science and machine learning.\r\n          <br /><br />\r\n          I graduated December 2019 with a Bachelor of Science in Computer Science from the University of Illinois at Urbana-Champaign, Grainger School of Engineering. I've been a Software Development Engineer at Amazon since April.\r\n          <br /><br />\r\n          My dream is to work on machine learning systems in an effort to bring autonomous vehicles into the mainstream as the primary mode of transportation.\r\n        </p>\r\n      </div>\r\n      <div id=\"proj-courses\" className=\"col foreground\">\r\n        <h1>Projects and Courses</h1>\r\n        <p>[WIP]</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home","import React from 'react';\nimport './App.scss';\nimport { Route, BrowserRouter } from 'react-router-dom'\nimport Navbar from './components/Navbar'\nimport Home from './components/Home'\n\nfunction App() {\n  const ROOT_PATH = \"/react-portfolio\"\n  return (\n    <BrowserRouter>\n      <div id=\"App\">\n        <Navbar rootPath={ROOT_PATH} />\n        <Route exact path={ROOT_PATH} component={Home} />\n        <Route path={ROOT_PATH + \"/contact\"} component={null} />\n        <Route path={ROOT_PATH + \"/resume\"} component={null} />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}